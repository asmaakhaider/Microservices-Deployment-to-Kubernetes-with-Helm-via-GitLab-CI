variables:
  # The domain used for the live deployment
  KUBE_NAMESPACE_PROD: prod
  IP_PROD: 63.33.91.237  # Remplacer par l'IP de votre VM
  NODEPORT_PROD: 30000   # Corrected NodePort range (30000-32767)

image:
  name: "python:3.11-alpine"
  entrypoint: ["/bin/sh", "-c"]

stages:
  - test
  - build
  - deploy

test:
  stage: test
  image: python:latest
  before_script:
    # Update and install required dependencies
    - apt-get update && apt-get install -y python3-pip
  script:
    - pip install fastapi
    - pip install pytest
    - pip install httpx
    - pip install jinja2
    # - cd gateway/ # Décommentez cette ligne si nécessaire pour naviguer dans le bon dossier
    #- python3 -m pytest
build_gateway:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    # Build the container image
    - docker build -t assma123/k-api-gateway:latest -f gateway/Dockerfile gateway
    # List the container images
    - docker image ls
    # Push the image to DockerHub
    - docker push assma123/k-api-gateway:latest
    - docker images  # Vérification que l'image est bien présente

deploy_prod:
  stage: deploy
  image: devth/helm:latest  # Image contenant Helm
  environment:
    name: prod
    url: http://$IP_PROD:$NODEPORT_PROD
  variables:
    NAMESPACE: $KUBE_NAMESPACE_PROD
  script:
    - kubectl config get-contexts
    - kubectl config use-context gitlab-group7610338/gitlab_exam:k3s-cluster
    # Deploy or update the application with Helm
    - helm upgrade --install gateway ./test-gateway/ --namespace $NAMESPACE --set service.nodeport="$NODEPORT_PROD"
    # Check the status of the Helm deployment
    - helm list -n $NAMESPACE
    - kubectl get all -n $NAMESPACE

